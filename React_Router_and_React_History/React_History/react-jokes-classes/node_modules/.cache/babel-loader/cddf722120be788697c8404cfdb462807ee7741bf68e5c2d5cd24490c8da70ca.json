{"ast":null,"code":"var _jsxFileName = \"/var/www/html/renaming/React_Router_and_React_History/React_History/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JokeList({\n  numJokesToGet = 5\n}) {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(function () {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            ...jokeObj\n          } = res.data;\n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({\n              ...jokeObj,\n              votes: 0\n            });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n        setJokes(j);\n        setIsLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (jokes.length === 0) getJokes();\n  }, [numJokesToGet]);\n  function generateNewJokes() {\n    setJokes([]);\n    setIsLoading(true);\n  }\n  function vote(id, delta) {\n    setJokes(allJokes => allJokes.map(j => j.id === id ? {\n      ...j,\n      votes: j.votes + delta\n    } : j));\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-4x fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: this.generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), sortedJokes.map(({\n      joke,\n      id,\n      votes\n    }) => /*#__PURE__*/_jsxDEV(Joke, {\n      text: joke,\n      id: id,\n      votes: votes,\n      vote: vote\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this);\n}\n_s(JokeList, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","getJokes","j","seenJokes","Set","length","res","get","headers","Accept","jokeObj","data","has","id","add","push","votes","console","error","err","log","generateNewJokes","vote","delta","allJokes","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","sortedJokes","sort","a","b","onClick","joke","text","_c","$RefreshReg$"],"sources":["/var/www/html/renaming/React_Router_and_React_History/React_History/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\n/** List of jokes. */\n\nfunction JokeList({numJokesToGet = 5}){\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true)\n\n \nuseEffect(function () {\n  async function getJokes() {\n    let j = [...jokes];\n    let seenJokes = new Set();\n    try {\n      while (j.length < numJokesToGet){\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {Accept: \"application/json\"}\n        });\n        let {...jokeObj} = res.data\n\n        if (!seenJokes.has(jokeObj.id)){\n          seenJokes.add(jokeObj.id);\n          j.push({...jokeObj, votes: 0});\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n      setJokes(j);\n      setIsLoading(false)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  if(jokes.length === 0 ) getJokes();\n}, [numJokesToGet]);\n\n  function generateNewJokes(){\n    setJokes([]);\n    setIsLoading(true);\n  }\n\n  function vote(id, delta) {\n    setJokes(allJokes =>\n      allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  }\n\n  if(isLoading) {\n    return (\n      <div className=\"loading\">\n        <i className=\"fas fa-4x fa-spinner fa-spin\" />\n      </div>\n    )\n  }\n    let sortedJokes = [...jokes].sort((a,b) => b.votes - a.votes);\n\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={this.generateNewJokes}\n        >\n          Get New Jokes\n        </button>\n\n        {sortedJokes.map(({joke, id, votes}) => (\n          <Joke\n            text={joke}\n            key={id}\n            id={id}\n            votes={votes}\n            vote={vote}\n          />\n        ))}\n      </div>\n    );\n  }\n\n\nexport default JokeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}